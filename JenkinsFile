pipeline {
    agent any
    stages {
        stage ('Build Backend'){
            steps{
                sh 'mvn clean package -DskipTests=true'
            }
            
        }
        stage ('Unit Tests'){
            steps{
                sh 'mvn test'
            }  
        }
        stage ('Sonar Analysis'){
            environment{
                scannerHome = tool 'SONAR_SCANNER'
            }
            steps{
                withSonarQubeEnv('SONAR_LOCAL'){
                    sh "${scannerHome}/bin/sonar-scanner -e -Dsonar.projectKey=DeployBack -Dsonar.host.url=http://localhost:9000 -Dsonar.login=65ffebaa17b753a8d7e0d86a7c8c9575e6e0f917 -Dsonar.java.binaries=target -Dsonar.coverage.exclusions=**/.mvn/**,**/src/test/**,**/model/**,**Application.java"
                }
                
            }  
        }
        stage('Quality Gate'){
            steps{
                sleep(50)
                timeout(time:1, unit: 'MINUTES')
                    waitForQualityGate abortPipeline: true  //se o quality gate falhar a pipeline vai separado
            }
        }
    }
}

